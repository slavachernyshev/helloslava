__NUXT_JSONP__("/posts/2021-07-29-CC", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S){return {data:[{post:{slug:"2021-07-29-CC",description:"В проектировании программного обеспечения используются два термина - связность (coupling) и сплоченность (cohesion). Основной подход заключается в том, что связность должна быть низкой, а сплоченность высокой. Такой подход во многих случаях помогает разобраться, как правильно сформировать подразделение кибербезопасности, чтобы попытаться исключить возможные конфликтные ситуации, когда один процесс и его источники данных расползается на несколько отделов.",title:"Связность (coupling) и сплоченность (cohesion)",theme:"Структура",ttr:"11 минут",preview:"2021-07-29-CC-05.png",toc:[{id:C,depth:o,text:D},{id:E,depth:o,text:F},{id:G,depth:o,text:H},{id:I,depth:o,text:J},{id:K,depth:o,text:L}],body:{type:"root",children:[{type:a,tag:c,props:{},children:[{type:b,value:"В проектировании программного обеспечения используются два термина: связность (coupling) и сплоченность (cohesion). Основной подход заключается в том, что связность должна быть низкой, а сплоченность высокой."}]},{type:a,tag:z,props:{label:"Определения"},children:[{type:a,tag:c,props:{},children:[{type:a,tag:M,props:{},children:[{type:b,value:"Связность (Coupling)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Под связностью понимают степень зависимости между отдельными единицами, выполняющими определённую задачу (модулями) \u002F\u002F "},{type:a,tag:m,props:{},children:[{type:b,value:"Coupling is the measure of the degree of interdependence between the modules."}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:M,props:{},children:[{type:b,value:"Сплоченность (Cohesion)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Под сплоченностью понимают степень функциональной связности между собой элементов одного модуля. То есть своеобразный клей, который держит все элементы модуля вместе. \u002F\u002F "},{type:a,tag:m,props:{},children:[{type:b,value:"Cohesion is a measure of the degree to which the elements of the module are functionally related. It is the degree to which all elements directed towards performing a single task are contained in the component. Basically, cohesion is the internal glue that keeps the module together."}]}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:p,props:{alt:"Связность и сплоченность",src:"~\u002Fassets\u002Fimages\u002F2021-07-29-CC\u002F2021-07-29-CC-01.png"},children:[]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Такой подход во многих случаях помогает разобраться, как правильно сформировать подразделение кибербезопасности, чтобы попытаться исключить возможные конфликтные ситуации, когда один процесс и его источники данных расползается на несколько отделов. Это всё плохо влияет на "},{type:a,tag:N,props:{":to":O},children:[{type:b,value:A}]},{type:b,value:" и в целом ухудшает результаты работы. Поэтому давайте разбирёмся в этих терминах и как их использовать чуть глубже."}]},{type:a,tag:x,props:{},children:[]},{type:a,tag:q,props:{id:C},children:[{type:a,tag:d,props:{href:"#%D1%80%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-%D1%81%D0%B2%D1%8F%D0%B7%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E-%D0%B8-%D1%81%D0%BF%D0%BB%D0%BE%D1%87%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E",ariaHidden:r,tabIndex:s},children:[{type:a,tag:t,props:{className:[u,v]},children:[]}]},{type:b,value:D}]},{type:a,tag:c,props:{},children:[{type:b,value:"Начнём с того, что закрепим у себя в голове разницу между этими понятиями. Ниже в табличке я набросал различия по основным направлениям. Я буду придерживаться программерской терминологии, используя слово "},{type:a,tag:k,props:{},children:[{type:b,value:"модуль"}]},{type:b,value:" вместо "},{type:a,tag:k,props:{},children:[{type:b,value:"подразделения"}]},{type:b,value:" или "},{type:a,tag:k,props:{},children:[{type:b,value:"отдела"}]},{type:b,value:". Можно было бы, конечно, использовать "},{type:a,tag:k,props:{},children:[{type:b,value:"организационная единица"}]},{type:b,value:", но меня от него немного выворачивает."}]},{type:a,tag:"table",props:{},children:[{type:a,tag:"thead",props:{},children:[{type:a,tag:w,props:{},children:[{type:a,tag:P,props:{},children:[{type:b,value:"Связность"}]},{type:a,tag:P,props:{},children:[{type:b,value:"Сплоченность"}]}]}]},{type:a,tag:"tbody",props:{},children:[{type:a,tag:w,props:{},children:[{type:a,tag:l,props:{},children:[{type:b,value:"Относится к взамодействию между двумя и более модулями"}]},{type:a,tag:l,props:{},children:[{type:b,value:"Относится к взаимодействию между двумя и более элементами одного модуля"}]}]},{type:a,tag:w,props:{},children:[{type:a,tag:l,props:{},children:[{type:b,value:"Фокусируется на измерении зависимости модуля от других модулей"}]},{type:a,tag:l,props:{},children:[{type:b,value:"Фокусируется на измерении функциональной силы (полноты) модуля"}]}]},{type:a,tag:w,props:{},children:[{type:a,tag:l,props:{},children:[{type:b,value:"Идеально иметь низко связанные модули"}]},{type:a,tag:l,props:{},children:[{type:b,value:"Идеально иметь модули с высокой сплочённостью, когда реализация какой-либо дополнительной функциональности происходит без коммуникаций или с малым количеством коммуникаций с другими модулями"}]}]},{type:a,tag:w,props:{},children:[{type:a,tag:l,props:{},children:[{type:b,value:"Невозможно достичь полного отсутствия связности между модулями"}]},{type:a,tag:l,props:{},children:[{type:b,value:"Возможно создавать полностью сплочённые модули"}]}]}]}]},{type:a,tag:x,props:{},children:[]},{type:a,tag:q,props:{id:E},children:[{type:a,tag:d,props:{href:"#%D0%BA%D0%B0%D0%BA-%D0%BE%D1%86%D0%B5%D0%BD%D0%B8%D0%B2%D0%B0%D0%B5%D1%82%D1%81%D1%8F-%D1%81%D0%B2%D1%8F%D0%B7%D0%BD%D0%BE%D1%81%D1%82%D1%8C-coulping",ariaHidden:r,tabIndex:s},children:[{type:a,tag:t,props:{className:[u,v]},children:[]}]},{type:b,value:F}]},{type:a,tag:c,props:{},children:[{type:b,value:"Обычно используется вот такая шкала при анализе связности модулей (смотри рисунок). Довольно тяжело перевести эти термины в русскоязычный вариант (вариант "},{type:a,tag:d,props:{href:"https:\u002F\u002Fru.wikipedia.org\u002Fwiki\u002F%D0%97%D0%B0%D1%86%D0%B5%D0%BF%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)",rel:[g,h,i],target:j},children:[{type:b,value:"википедии"}]},{type:b,value:" с «зацеплениями» вызывает кровь из глаз), поэтому давайте ориентироваться на английские термины, а я дальше просто дам им корректные определения и примеры на русском."}]},{type:a,tag:z,props:{},children:[{type:b,value:"Хорошей альтернативой бедной информации в википедии по данному вопросу является вот "},{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fmodule-coupling"},children:[{type:b,value:"этот"}]},{type:b,value:" ресурс, но там английский и слишком по-программерски."}]},{type:a,tag:c,props:{},children:[{type:a,tag:p,props:{alt:"Шкала для связности",src:"~\u002Fassets\u002Fimages\u002F2021-07-29-CC\u002F2021-07-29-CC-02.png"},children:[]}]},{type:a,tag:y,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fdata-coupling",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Data Coupling"}]}]},{type:b,value:": Если зависимость между модулями основана на том, что они взаимодействуют, передавая только конкретные данные друг другу, то говорят, что модули связаны по данными. В случае такой связи модули практически независимы друг от друга. Отличный примером может являться то, когда между ИТ и ИБ в части патчинга существует такой интерфейс: вторые присылают первым название сервера и перечень нужных патчей, первые после патчинга выдают ок или не ок. В данном случае ИТ и ИБ связаны по данным."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fstamp-coupling",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Stamp Coupling"}]}]},{type:b,value:": Такая связь между модулями возникает, когда модули используют какую-то одну структуру данных (возможно разные части этой структуры). Тут ситуация несколько запутанная, и, как правило, заключается в последовательном использовании и изменении данной структуры из-за чего происходят различные негативные side-эффекты. Например, отчет о сканировании получает сначала отдел рисков, у которого есть свои механизмы для исключения не важных с точки зрения оценки рисков уязвимостей. Они эту информацию удаляют из отчета и пересылают отчет в SOC, который не предполагает, что из отчёта было что-либо удалено, и не проводит анализ логов на предмет того, могли ли эти удаленные рисковиками уязвимости быть использованы злоумышленником ранее."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fcontrol-coupling",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Control Coupling"}]}]},{type:b,value:": Если модули передают друг другу какую-то управляющую информацию (один модуль контроллирует выполнение процессов в другом), то говорят, что они связаны по управлению. Например, процессы организованы таким образом, что один отдел управляет действиями другого отдела, находящегося на одном с ним уровне. Это плохо, так как текущие задачи одного из отделов могут быть поставлены на паузу из-за задачи, которая важной кажется только второму отделу."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fexternal-coupling",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"External Coupling"}]}]},{type:b,value:": Внешняя связность выражается в том, что два или много модулей одновременно зависят от одного внешнего фактора. Например, два отдела пользуются одной системой (или аутсорсером, аутстаффером и т.д.). Один из отделов вносит значимые изменения в систему, из-за которых второй отдел не может выполнять свою работу."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fcommon-coupling",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Common Coupling"}]}]},{type:b,value:": Модули используют общие (глобальные) структуры данных. Например, совместно используют результаты сканирования на уязвимости для принятия различных решений (SOC — что мониторить, отдел рисков — для переоценки рисков). Ошибка в таких данных может привести к принятию неверных решений в обоих отделах. А если вдруг SOC потребовались, к примеру, данные сканирования в другой нотации, то ему потребуется подождать, пока к соответствующему варианту подготовится отдел управления рисками (переделает свои процедуры)."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Content Coupling:"}]},{type:b,value:" Например, есть отдел, который занимается управлением активами (инвентаризация, уязвимости и т.д.), и есть другой отдел, который занимается расчётом рисков. Очевидно, что они используют одну и ту же структуру — какой-то инвентаризационный лист активов. Если вдруг, первый отдел решит изменить свой подход к ведению данного инвентаризационного листа, то неизбежно изменится и качество оценки рисков (предположительно, для возврата к нормальному состоянию потребуется изменение процедур оценки рисков). Или, и SOC и отдел рисков используют общую базу инцидентов, в которую вносят каждый свои изменения. Рисковики могут дополнить такую базу, какими-то специфическими инцидентами для корректного принятия решений по рискам, а SOC в своем post-mortem анализе вдруг видит что-то не совсем то, что ожидалось."}]}]}]},{type:a,tag:x,props:{},children:[]},{type:a,tag:q,props:{id:G},children:[{type:a,tag:d,props:{href:"#%D0%BA%D0%B0%D0%BA-%D0%BE%D1%86%D0%B5%D0%BD%D0%B8%D0%B2%D0%B0%D0%B5%D1%82%D1%81%D1%8F-%D1%81%D0%BF%D0%BB%D0%BE%D1%87%D1%91%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C-cohesion",ariaHidden:r,tabIndex:s},children:[{type:a,tag:t,props:{className:[u,v]},children:[]}]},{type:b,value:H}]},{type:a,tag:c,props:{},children:[{type:b,value:"Здесь у нас другая шкала (в некоторой степени довольно похожая на шкалу, использованную для связности). С наименованиями в шкале я поступил аналогично связности — переводить не стал. Некоторые из степеней сплоченности можно также пройти почитать на "},{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fmodule-cohesion",rel:[g,h,i],target:j},children:[{type:b,value:"Chegg"}]},{type:b,value:" на английском, там гораздо больше полезной информации (в том числе плюсов и минусов конкретных вариантов сплоченности)."}]},{type:a,tag:c,props:{},children:[{type:a,tag:p,props:{alt:"Шкала для сплоченности",src:"~\u002Fassets\u002Fimages\u002F2021-07-29-CC\u002F2021-07-29-CC-03.png"},children:[]}]},{type:a,tag:y,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Ffunctional-cohesion",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Functional Cohesion"}]}]},{type:b,value:": В одном модуле собираются все необходимые (важные) элементы, чтобы выполнять какое-либо одно конкретное действие (или ряд похожих). Как пример, это может быть объединение под одну крышу управления активами с оценкой рисков, так как последнее зависит от того, как происходит управление активами. Так можно быть увереным, что результаты оценки рисков не будут чем-то тёплым на лопате, как минимум из-за плохих данных по активам."}]}]},{type:a,tag:z,props:{label:"Лирическое отступление"},children:[{type:a,tag:n,props:{className:["space-y-1"]},children:[{type:a,tag:n,props:{},children:[{type:b,value:"CISO: "},{type:a,tag:m,props:{},children:[{type:b,value:"Сколько у нас windows-хостов?"}]}]},{type:a,tag:n,props:{},children:[{type:b,value:"Админ антивируса: "},{type:a,tag:m,props:{},children:[{type:b,value:"7864"}]}]},{type:a,tag:n,props:{},children:[{type:b,value:"EDR-команда: "},{type:a,tag:m,props:{},children:[{type:b,value:"6722"}]}]},{type:a,tag:n,props:{},children:[{type:b,value:"CMDB-команда: "},{type:a,tag:m,props:{},children:[{type:b,value:"4848"}]}]},{type:a,tag:n,props:{},children:[{type:b,value:"SIEM-команда: "},{type:a,tag:m,props:{},children:[{type:b,value:"9342"}]}]},{type:a,tag:n,props:{},children:[{type:b,value:"CISO: ¯\\_(ツ)_\u002F¯"}]}]}]},{type:a,tag:y,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fsequential-cohesion",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Sequential Cohesion"}]}]},{type:b,value:": Результаты одной из функций модуля являются входными данными для других функций модуля. Это похоже на предыдущий пример с управлением активами и рисками. То есть если из примера выше разделить управление активами и оценку рисков по разным отделам, то мы получим как раз таки последовательную сплоченность вместо функциональной."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Fcommunicational-cohesion",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Communicational Cohesion"}]}]},{type:b,value:": Когда функции модуля работают надо одними и теми же данными. Возвращаясь к нашим активам и рискам, эта сплоченность выражается в работе над одной и той же базой данных активов в какой-нибудь GRC-системе. Это позволяет обеим функциям коммуницировать на основании одного Golden Source источника."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Procedural Cohesion"}]},{type:b,value:": Функции группируются в один модуль, потому что они выполняются в определенной последовательности, согласно некой процедуре. Хорошим примером может быть реагирование на инциденты, где у нас последовательно выполняются функции регистрации иницдента, обработки инцидента, взаимодействия с третьими лицами, репортинг, post-mortem (последовательность и содержание этапов может варьироваться в зависимости от компании)."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Ftemporal-cohesion",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Temporal Cohesion"}]}]},{type:b,value:": Различные функции модуля объединются только во время определенного интервала. Например, результаты аудита могут запустить все функции (в зависимости от результатов аудита), связанные с устранением выявленных проблем, как в управлении доступом, так и, к примеру, в управлении инцидентами или уязвимостями. Лучше всего это объясняется на примере человека, который собирается пойти спать: ему нужно почистить зубы (модуль «здоровье»), проверить двери (модуль «безопасность»), выключить электронные приборы (модуль «финансы»), прочитать молитву (модуль «душа»)."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:"https:\u002F\u002Fwww.chegg.com\u002Flearn\u002Fcomputer-science\u002Fcomputer-software\u002Flogical-cohesion",rel:[g,h,i],target:j},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Logical Cohesion"}]}]},{type:b,value:": Функции модуля связаны только логически, но не функционально. Здесь довольно тяжело привести пример из мира кибербезопасности, так как такие связи встречаются очень редко. Ну, допустим, есть функция пен-теста и функция выявления информации об уязвимостях из открытых источников (мониторинг новостей вендоров, форумов и т.п.). Обе функции логически про одно — найти уязвимости. Но выполняются абсолютно по разному и друг с другом функционально не связаны."}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Coincidental Cohesion"}]},{type:b,value:": Функции модуля не связаны друг с другом. Например, размещение в одном отделе функций по управлению уязвимостями и комплайенса. Очевидно, что это худшая форма сплоченности, которая может быть обоснована только какими-то внешними факторами: квалификацией, необходимостью выполнить требования по численности отдела и т.д."}]}]}]},{type:a,tag:x,props:{},children:[]},{type:a,tag:q,props:{id:I},children:[{type:a,tag:d,props:{href:"#%D0%BD%D1%83-%D0%BE%D0%BA-%D0%B8-%D1%87%D1%82%D0%BE-%D0%B4%D0%B0%D0%BB%D1%8C%D1%88%D0%B5",ariaHidden:r,tabIndex:s},children:[{type:a,tag:t,props:{className:[u,v]},children:[]}]},{type:b,value:J}]},{type:a,tag:c,props:{},children:[{type:b,value:"Вспоминая начало:"}]},{type:a,tag:Q,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Считается, что связность (coupling) должна быть низкой, а сплоченность (cohesion) высокой."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Идеальной ситуацией для нас было бы такое разделение функций, чтобы между отделами у нас был "},{type:a,tag:k,props:{},children:[{type:b,value:"data"}]},{type:b,value:B},{type:a,tag:k,props:{},children:[{type:b,value:"stamp"}]},{type:b,value:" coupling, а внутри отделов у нас все функции были "},{type:a,tag:k,props:{},children:[{type:b,value:"functional"}]},{type:b,value:B},{type:a,tag:k,props:{},children:[{type:b,value:R}]},{type:b,value:B},{type:a,tag:k,props:{},children:[{type:b,value:S}]},{type:b,value:" cohesion. Как же этого добится? Универсальных способов нет. Покажу пару своих подходов."}]},{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Coupling"}]},{type:b,value:": очень помогает нарисовать "},{type:a,tag:d,props:{href:"https:\u002F\u002Fru.wikipedia.org\u002Fwiki\u002F%D0%A8%D0%B8%D0%BD%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85",rel:[g,h,i],target:j},children:[{type:b,value:"шину данных"}]},{type:b,value:" и на неё нанизывать различные подразделения, которые вносят свой кусок информации в шину. Изначально при проектировании всё взаимодействие должно крутиться вокруг манифестов, описывающих входные и выходные данные. В дальнейшем такую шину можно реализовать на каком-нибудь программном продукте."}]},{type:a,tag:c,props:{},children:[{type:a,tag:p,props:{alt:"Шина данных",src:"~\u002Fassets\u002Fimages\u002F2021-07-29-CC\u002F2021-07-29-CC-04.png"},children:[]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Понятное дело, что такой абстракцией всех вопросов не решишь, но как начало для попытки уменьшить связность вполне сойдёт."}]},{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Cohesion"}]},{type:b,value:": хорошей практикой выглядит взять стандарт с максимальным количеством контролей (идеальным будет "},{type:a,tag:d,props:{href:"https:\u002F\u002Fcsrc.nist.gov\u002Fpublications\u002Fdetail\u002Fsp\u002F800-53\u002Frev-5\u002Ffinal",rel:[g,h,i],target:j},children:[{type:b,value:"NIST 800-53"}]},{type:b,value:") и смотреть, как функции безопасности в нём распределены по различным семействам, Как правило, внутри группы (семейства) контролей существует или "},{type:a,tag:k,props:{},children:[{type:b,value:R}]},{type:b,value:" cohesion, или "},{type:a,tag:k,props:{},children:[{type:b,value:S}]},{type:b,value:" cohesion. Для упрощенных вариантов можно взять меры из ФСТЭКовских документов, но там есть группа ЗИС (Защита информационной (автоматизированной) системы и ее компонентов), в которой такая каша..."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Идеальный результат такого проектирования должен выглядить плюс-минус так (сверху то, что было до проектирования):"}]},{type:a,tag:c,props:{},children:[{type:a,tag:p,props:{alt:"Низкая связность и высокая сплоченность",src:"~\u002Fassets\u002Fimages\u002F2021-07-29-CC\u002F2021-07-29-CC-05.png"},children:[]}]},{type:a,tag:q,props:{id:K},children:[{type:a,tag:d,props:{href:"#%D0%B8%D1%82%D0%BE%D0%B3%D0%BE-%D0%B8-%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE-%D1%81%D0%B8%D0%BB%D0%BE%D1%81",ariaHidden:r,tabIndex:s},children:[{type:a,tag:t,props:{className:[u,v]},children:[]}]},{type:b,value:L}]},{type:a,tag:c,props:{},children:[{type:b,value:"Конечно, организационная структура часто размечается исходя из других факторов, например:"}]},{type:a,tag:y,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"амбиции отдельных членов вашей команды («или так, или ухожу»),"}]},{type:a,tag:e,props:{},children:[{type:b,value:"их компетенции (тяжело отдать управление уязвимостями от человека, который собаку на этом съел, другому, кто этим не занимался только ради какого-то эфемерного "},{type:a,tag:k,props:{},children:[{type:b,value:"functional cohesion"}]},{type:b,value:"),"}]},{type:a,tag:e,props:{},children:[{type:b,value:"размера команды, когда среди пары десятков человек (или вообще пары человек) проводить какой-либо coupling \u002F cohesion анализ равно разогревать океан кипятильником."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Coupling \u002F cohesion анализ является хорошим стартовым упражнением для больших команд, особенно, когда в таких командах возникают проблемы с расползанием процессов по нескольким отделам и все друг-другом недовольны в этих процессах (привет, управлению уязвимостями, DevSecOps-у и прочим комбайнам кибербезопасности)."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Стоит помнить, что данный подход приводит к изоляции отделов друг от друга, а это ведёт, как любят говорить всякие McKinsey и Gartner к "},{type:a,tag:k,props:{},children:[{type:b,value:"silos"}]},{type:b,value:"."}]},{type:a,tag:Q,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Silo mentality"}]},{type:b,value:" — a mindset present when certain departments or sectors do not wish to share information with others in the same company ("},{type:a,tag:d,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FInformation_silo",rel:[g,h,i],target:j},children:[{type:b,value:"википедия"}]},{type:b,value:") \u002F\u002F образ мысли, когда отделы не желают делиться информацией друг с другом."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"То есть отделы перестают иметь какие-то общие цели в своих действиях и каждый фокусируется исключительно на своих целях (возникает плохой "},{type:a,tag:N,props:{":to":O},children:[{type:b,value:A}]},{type:b,value:"). Как правило, такая ситуация возникает не сразу, а через какое-то время накопления конфликтов между руководителями. Решение этого вопроса не всегда простое и как правило базируется на переключении менеджеров из менталитета «мой отдел» в менталитет «наша организация». Есть различные методы, как попробовать это сделать, но об этом в другом посте."}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002F2021-07-29-CC",extension:".md",createdAt:"2021-07-30T20:27:49.280Z",updatedAt:"2021-07-30T20:27:49.281Z"},prev:{slug:"2021-07-27-SX",title:A,theme:"Security Experience (SX), Security User Experience (SecUX)",createdAt:"2021-07-30T20:27:49.279Z"},next:null}],fetch:{},mutations:void 0}}("element","text","p","a","li","strong","nofollow","noopener","noreferrer","_blank","code","td","i","div",2,"content-img","h2","true",-1,"span","icon","icon-link","tr","hr","ul","note","Security Experience (SX)"," \u002F ","разница-между-связностью-и-сплоченностью","Разница между связностью и сплоченностью","как-оценивается-связность-coulping","Как оценивается связность (coulping)","как-оценивается-сплочённость-cohesion","Как оценивается сплочённость (cohesion)","ну-ок-и-что-дальше","Ну ок и что дальше?","итого-и-немного-про-силос","Итого и немного про силос","b","nuxt-link","{ name: 'posts-slug', params: { slug: '2021-07-27-SX' } }","th","blockquote","sequential","communicational")));